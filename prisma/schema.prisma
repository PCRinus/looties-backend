// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-arm64-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String     @id @default(uuid())
  email         String     @unique
  password      String
  passwordSalt  String
  walletAddress String     @unique
  inventory     Inventory?
  messages      Message[]
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
}

model Inventory {
  id        String   @id @default(uuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @unique
  items     Item[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Item {
  id           String    @id @default(uuid())
  name         String    @unique //Maybe unique? TBD
  details      String?   @db.Text
  type         ItemsType
  price        Decimal //String might also ba an option for prices
  lowestPrice  Decimal
  highestPrice Decimal
  dropChance   Decimal
  inventory    Inventory @relation(fields: [inventoryId], references: [id])
  inventoryId  String
  Lootbox      Lootbox?  @relation(fields: [lootboxId], references: [id])
  lootboxId    String?
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
}

model Lootbox {
  id          String   @id @default(uuid())
  price       Decimal
  openedCount Int      @default(0)
  items       Item[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Message {
  id        String   @id @default(uuid())
  message   String
  likes     Int      @default(0)
  User      User     @relation(fields: [userId], references: [id])
  userId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum ItemsType {
  NFT
  TOKEN
}
