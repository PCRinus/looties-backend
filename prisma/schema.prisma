// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-arm64-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String     @id @default(uuid())
  walletAddress String     @unique
  excludedUntil DateTime?  @db.Timestamptz
  profile       Profile?
  inventory     Inventory?
  messages      Message[]
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
}

model Profile {
  id              String  @id @default(uuid())
  userName        String? @unique
  level           Int     @default(1)
  xp              Int     @default(0)
  gamesPlayed     Int     @default(0)
  gamesWon        Int     @default(0)
  gamesLost       Int     @default(0)
  winRation       Float   @default(0)
  lootboxesOpened Int     @default(0)
  referrals       Int     @default(0)
  totalWagered    Float   @default(0)
  netProfit       Float   @default(0)
  facebookLink    String?
  twitterLink     String?
  instagramLink   String?
  user            User    @relation(fields: [userId], references: [id])
  userId          String  @unique
}

model Inventory {
  id        String   @id @default(uuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @unique
  items     Item[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Item {
  id           String      @id @default(uuid())
  name         String      @unique //Maybe unique? TBD
  details      String?     @db.Text
  type         ItemsType
  price        Decimal //String might also ba an option for prices
  lowestPrice  Decimal
  highestPrice Decimal
  dropChance   Decimal
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
  inventory    Inventory   @relation(fields: [inventoryId], references: [id])
  inventoryId  String
  Lootbox      Lootbox?    @relation(fields: [lootboxId], references: [id])
  lootboxId    String?
  LiveDrops    LiveDrops[]
}

model Lootbox {
  id          String   @id @default(uuid())
  price       Decimal
  openedCount Int      @default(0)
  items       Item[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model LiveDrops {
  id     String @id @default(uuid())
  item   Item   @relation(fields: [itemId], references: [id])
  itemId String
}

model Message {
  id        String   @id @default(uuid())
  message   String
  likes     Int      @default(0)
  User      User?    @relation(fields: [userId], references: [id])
  userId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum ItemsType {
  NFT
  TOKEN
}
