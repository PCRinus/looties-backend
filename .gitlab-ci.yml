stages:
  - install
  - test
  - publish-docker-image
  - dev-deploy

default:
  image: node:18 #TODO - use node:18-alipne, but install openSLL, otherwise prisma job will fail

#Jobs that start with . are hidden from the runner
.standard-rules:
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

cache:
  key:
    files:
      - package-lock.json
  paths:
    - node_modules/

install-deps:
  stage: install
  extends:
    - .standard-rules
  script:
    - npm install

run-tests-with-coverage:
  stage: test
  needs:
    - install-deps
  extends:
    - .standard-rules
  script:
    - npm run test:cov

run-linter:
  stage: test
  needs:
    - install-deps
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  script:
    - npm run lint
  allow_failure: true

build-docker-image:
  image: docker:latest
  stage: publish-docker-image
  needs:
    - run-tests-with-coverage
    - run-linter
  rules:
    - if: $CI_COMMIT_BRANCH
      exists:
        - docker-compose.yml
  services:
    - docker:dind
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_JOB_TOKEN $CI_REGISTRY
  script:
    - echo $ENV_FILE
    # File is outside of build context, so make local copy.
    - cp $ENV_FILE .env
    - docker compose up --build -dV
    - docker tag looties-api-dev:latest "$CI_REGISTRY_IMAGE:latest"
    - docker push "$CI_REGISTRY_IMAGE:latest"

deploy-to-dev:
  stage: dev-deploy
  needs:
    - build-docker-image
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  script:
    - echo "Dummy deploy to dev"